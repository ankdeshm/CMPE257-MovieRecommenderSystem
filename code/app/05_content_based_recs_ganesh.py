# -*- coding: utf-8 -*-
"""05_content_based_recs_ganesh.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1B8nBYFBPALdDbSrUb0ZaSVIi8Fvw0joh
"""

import pandas as pd
import sklearn.metrics.pairwise as pair
import sklearn.preprocessing as prep

movies_data=pd.read_csv('movies.csv')
movies_data.drop(columns=['genres'],inplace=True)
movies_data

tags_data=pd.read_csv('tags.csv')
tags_data.drop(columns=['timestamp'],inplace=True)
tags_data

movies_w_tags=movies_data.merge(tags_data,on=['movieId'])
movies_w_tags

movie_tag_encoder=prep.OneHotEncoder(sparse=False)
movies_encoded_tags=movie_tag_encoder.fit_transform(movies_w_tags[['tag']])
enc_tag_frame=pd.DataFrame(data=movies_encoded_tags,\
                           columns=movie_tag_encoder.get_feature_names_out())
enc_tag_frame

movies_w_1_tag=movies_w_tags.join(enc_tag_frame)
movies_w_1_tag.drop(columns=['tag'],inplace=True)
movies_w_1_tag

content_data=movies_w_1_tag.drop(columns=['userId']).groupby(['movieId']).sum()
content_data

user_data=movies_w_1_tag.drop(columns=['movieId']).groupby(['userId']).sum()
user_data

distances=pair.euclidean_distances(user_data,content_data)
distances

distance_frame=pd.DataFrame(distances,columns=content_data.index.values)
distance_frame

user_to_rec=2
recced_movies=distance_frame.sort_values(by=user_to_rec,axis=1).columns.values[:10]
recced_movies

user_data.sort_values(by=user_to_rec,axis=1,ascending=False).query('userId==@user_to_rec')

recced_names=[]
for i in recced_movies:
  name=movies_data.query('movieId==@i')['title'].values[0]
  recced_names.append(name)
recced_names